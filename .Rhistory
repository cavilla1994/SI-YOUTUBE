url <- "https://raw.githubusercontent.com/cavilla1994/SI-YOUTUBE/main/Global%20YouTube%20Statistics.csv"
data <- read.csv(url, header = TRUE)
#Consulta de clase de la base de datos
data.class(data)
View(data)
#Consulta de clase de la base de datos
data.class(data)
#Consulta de los nombres de las columnas y de que tipo es:
colnames(data)
tipos_de_datos <- sapply(data, class)
tipos_de_datos
#Veo los primeros 10 registros y los ultimos registros
head(datos)
#Veo los primeros 10 registros y los ultimos registros
head(data)
tail(data)
filas_elimindas
#Contamos cuantos valores NAN hay en cada columna
contar_nan <- function(data) {
result <- colSums(sapply(data, is.nan))
df_result <- data.frame(Columna = names(result), NaN_Count = result)
return(df_result)
}
resultado_nan <- contar_nan(data)
print(resultado_nan)
resultado_nan
#Eliminamos filas con datos NAN
eliminar_filas_nan <- function(data) {
data_sin_nan <- data[complete.cases(data), ]
return(data_sin_nan)
}
# Obtener las filas eliminadas
filas_elimindas <- data[!(rownames(data) %in% rownames(data_clear)), ]
# Guardar las filas eliminadas en un nuevo archivo CSV
ruta_archivo_eliminadas <- "C:/Users/JonÃ¡s/Desktop/filas_eliminadas.csv"
write.csv(filas_elimindas, file = ruta_archivo_eliminadas, row.names = FALSE)
data_clear
#Contamos cuantos valores NAN hay en cada columna
contar_nan <- function(data) {
result <- colSums(sapply(data, is.nan))
df_result <- data.frame(Columna = names(result), NaN_Count = result)
return(df_result)
}
resultado_nan <- contar_nan(data)
print(resultado_nan)
#Eliminamos filas con datos NAN
eliminar_filas_nan <- function(data) {
data_sin_nan <- data[complete.cases(data), ]
return(data_sin_nan)
}
# Obtener las filas eliminadas
filas_elimindas <- data[!(rownames(data) %in% rownames(data_clear)), ]
contar_nan <- function(data) {
result <- colSums(sapply(data, is.nan))
df_result <- data.frame(Columna = names(result), NaN_Count = result)
return(df_result)
}
resultado_nan <- contar_nan(data)
print(resultado_nan)
contar_nan <- function(data) {
result <- colSums(sapply(data, is.nan))
df_result <- data.frame(Columna = names(result), NaN_Count = result)
return(df_result)
}
resultado_nan <- contar_nan(data)
print(resultado_nan)
#Eliminamos filas con datos NAN
eliminar_filas_nan <- function(data) {
data_sin_nan <- data[complete.cases(data), ]
return(data_clear)
}
# Obtener las filas eliminadas
filas_elimindas <- data[!(rownames(data) %in% rownames(data_clear)), ]
contar_nan <- function(data) {
result <- colSums(sapply(data, is.nan))
df_result <- data.frame(Columna = names(result), NaN_Count = result)
return(df_result)
}
resultado_nan <- contar_nan(data)
print(resultado_nan)
#Eliminamos filas con datos NAN
eliminar_filas_nan <- function(data) {
data_clear <- data[complete.cases(data), ]
return(data_clear)
}
# Obtener las filas eliminadas
filas_elimindas <- data[!(rownames(data) %in% rownames(data_clear)), ]
########################################################
contar_nan <- function(data) {
result <- colSums(sapply(data, function(col) sum(is.na(col))))
df_result <- data.frame(Columna = names(result), NaN_Count = result)
return(df_result)
}
resultado_nan <- contar_nan(data)
print(resultado_nan)
# Eliminamos filas con datos NA
eliminar_filas_na <- function(data) {
data_clear <- data[complete.cases(data), ]
return(data_clear)
}
data_clear <- eliminar_filas_na(data)
filas_eliminadas <- data[!(rownames(data) %in% rownames(data_clear)), ]
data_clear
filas_eliminadas
View(filas_eliminadas)
View(data_clear)
########################################################
contar_nan <- function(data) {
result <- colSums(sapply(data, function(col) sum(is.na(col))))
df_result <- data.frame(Columna = names(result), NaN_Count = result)
return(df_result)
}
resultado_nan <- contar_nan(data)
print(resultado_nan)
# Eliminamos filas con datos NA en la columna 'subscribers_for_last_30_days'
eliminar_filas_na_columna <- function(data, columna) {
data_clear <- data[complete.cases(data) | !is.na(data[, columna]), ]
return(data_clear)
}
# Nombre de la columna con NA que deseas filtrar
columna_con_na <- "subscribers_for_last_30_days"
# Aplicar la funciÃ³n para eliminar filas con NA en la columna especificada
data_clear <- eliminar_filas_na_columna(data, columna_con_na)
filas_eliminadas <- data[!(rownames(data) %in% rownames(data_clear)), ]
data_clear <- eliminar_filas_na(data)
filas_eliminadas <- data[!(rownames(data) %in% rownames(data_clear)), ]
View(filas_eliminadas)
View(data_clear)
# Eliminamos filas con datos NA en la columna 'subscribers_for_last_30_days'
eliminar_filas_na_columna <- function(data, columna) {
data_clear <- data[complete.cases(data) | !is.na(data[, columna]), ]
return(data_clear)
}
# Nombre de la columna con NA que deseas filtrar
columna_con_na <- "subscribers_for_last_30_days"
# Aplicar la funciÃ³n para eliminar filas con NA en la columna especificada
data_clear <- eliminar_filas_na_columna(data, columna_con_na)
filas_eliminadas <- data[!(rownames(data) %in% rownames(data_clear)), ]
View(filas_eliminadas)
View(filas_eliminadas)
View(data_clear)
write.csv(data_clear, file = "C:/Users/Jonas-PC/Documents/GitHub/SI-YOUTUBE/data_clear.csv", row.names = FALSE)
write.csv(filas_eliminadas, file = "C:/Users/Jonas-PC/Documents/GitHub/SI-YOUTUBE/filas_eliminadas.csv", row.names = FALSE)
